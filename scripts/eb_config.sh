#!/usr/bin/env bash

while getopts e:s:b:c: flag; do
  case "${flag}" in
  e) ENVIRONMENT=${OPTARG} ;;
  s) SOLCHICK_SERVICE_ACCOUNT_PRI_ON_SOL=${OPTARG} ;;
  b) SOLCHICK_SERVICE_ACCOUNT_PRI_ON_BSC=${OPTARG} ;;
  c) SOLCHICK_SERVICE_ACCOUNT_PRI_ON_ETH=${OPTARG} ;;
  *) exit 1 ;;
  esac
done

if [[ -z "$SOLCHICK_SERVICE_ACCOUNT_PRI_ON_SOL" || -z "$SOLCHICK_SERVICE_ACCOUNT_PRI_ON_BSC" || -z "$SOLCHICK_SERVICE_ACCOUNT_PRI_ON_ETH" ]]; then
  echo "Private keys not provided, so stopping build!"
  exit 1
fi

if [[ ! -f ".env.${ENVIRONMENT}" ]]; then
  echo ".env.${ENVIRONMENT} not found, so stopping build!"
  exit 1
fi

ELB_MODE=$(awk -F "=" '/ELB_MODE/ {print $2}' .env."${ENVIRONMENT}")
BRIDGE_FEE=$(awk -F "=" '/BRIDGE_FEE/ {print $2}' .env."${ENVIRONMENT}")
SOLANA_TOKEN_ADDRESS=$(awk -F "=" '/SOLANA_TOKEN_ADDRESS/ {print $2}' .env."${ENVIRONMENT}")
SOLCHICK_BRIDGE_PROGRAM=$(awk -F "=" '/SOLCHICK_BRIDGE_PROGRAM/ {print $2}' .env."${ENVIRONMENT}")
SOLCHICK_MIGRATE_METHOD=$(awk -F "=" '/SOLCHICK_MIGRATE_METHOD/ {print $2}' .env."${ENVIRONMENT}")
SOLCHICK_SERVICE_ACCOUNT_ON_SOL=$(awk -F "=" '/SOLCHICK_SERVICE_ACCOUNT_ON_SOL/ {print $2}' .env."${ENVIRONMENT}")
EVM_TOKEN_ADDRESS_FOR_ETH=$(awk -F "=" '/EVM_TOKEN_ADDRESS_FOR_ETH/ {print $2}' .env."${ENVIRONMENT}")
SOLCHICK_SERVICE_ACCOUNT_ON_ETH=$(awk -F "=" '/SOLCHICK_SERVICE_ACCOUNT_ON_ETH/ {print $2}' .env."${ENVIRONMENT}")
ETH_RPC_URL_TEST=$(awk -F "=" '/ETH_RPC_URL_TEST/ {print $2}' .env."${ENVIRONMENT}")
ETH_RPC_URL_MAIN=$(awk -F "=" '/ETH_RPC_URL_MAIN/ {print $2}' .env."${ENVIRONMENT}")
EVM_BURN_METHOD_ID=$(awk -F "=" '/EVM_BURN_METHOD_ID/ {print $2}' .env."${ENVIRONMENT}")
EVM_TOKEN_ADDRESS_FOR_BSC=$(awk -F "=" '/EVM_TOKEN_ADDRESS_FOR_BSC/ {print $2}' .env."${ENVIRONMENT}")
SOLCHICK_SERVICE_ACCOUNT_ON_BSC=$(awk -F "=" '/SOLCHICK_SERVICE_ACCOUNT_ON_BSC/ {print $2}' .env."${ENVIRONMENT}")
BSC_RPC_URL_TEST=$(awk -F "=" '/BSC_RPC_URL_TEST/ {print $2}' .env."${ENVIRONMENT}")
BSC_RPC_URL_MAIN=$(awk -F "=" '/BSC_RPC_URL_MAIN/ {print $2}' .env."${ENVIRONMENT}")
SUPABASE_URL=$(awk -F "=" '/SUPABASE_URL/ {print $2}' .env."${ENVIRONMENT}")
SUPABASE_ANON_KEY=$(awk -F "=" '/SUPABASE_ANON_KEY/ {print $2}' .env."${ENVIRONMENT}")

{
  echo "ELB_MODE=${ELB_MODE}"
  echo "ENVIRONMENT=${ENVIRONMENT}"
  echo "BRIDGE_FEE=${BRIDGE_FEE}"
  echo "SOLANA_TOKEN_ADDRESS=${SOLANA_TOKEN_ADDRESS}"
  echo "SOLCHICK_BRIDGE_PROGRAM=${SOLCHICK_BRIDGE_PROGRAM}"
  echo "SOLCHICK_MIGRATE_METHOD=${SOLCHICK_MIGRATE_METHOD}"
  echo "SOLCHICK_SERVICE_ACCOUNT_ON_SOL=${SOLCHICK_SERVICE_ACCOUNT_ON_SOL}"
  echo "SOLCHICK_SERVICE_ACCOUNT_PRI_ON_SOL=${SOLCHICK_SERVICE_ACCOUNT_PRI_ON_SOL}"
  echo "EVM_TOKEN_ADDRESS_FOR_ETH=${EVM_TOKEN_ADDRESS_FOR_ETH}"
  echo "SOLCHICK_SERVICE_ACCOUNT_ON_ETH=${SOLCHICK_SERVICE_ACCOUNT_ON_ETH}"
  echo "SOLCHICK_SERVICE_ACCOUNT_PRI_ON_ETH=${SOLCHICK_SERVICE_ACCOUNT_PRI_ON_ETH}"
  echo "ETH_RPC_URL_TEST=${ETH_RPC_URL_TEST}"
  echo "ETH_RPC_URL_MAIN=${ETH_RPC_URL_MAIN}"
  echo "EVM_BURN_METHOD_ID=${EVM_BURN_METHOD_ID}"
  echo "EVM_TOKEN_ADDRESS_FOR_BSC=${EVM_TOKEN_ADDRESS_FOR_BSC}"
  echo "SOLCHICK_SERVICE_ACCOUNT_ON_BSC=${SOLCHICK_SERVICE_ACCOUNT_ON_BSC}"
  echo "SOLCHICK_SERVICE_ACCOUNT_PRI_ON_BSC=${SOLCHICK_SERVICE_ACCOUNT_PRI_ON_BSC}"
  echo "BSC_RPC_URL_TEST=${BSC_RPC_URL_TEST}"
  echo "BSC_RPC_URL_MAIN=${BSC_RPC_URL_MAIN}"
  echo "SUPABASE_URL=${SUPABASE_URL}"
  echo "SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}"
} >.env
